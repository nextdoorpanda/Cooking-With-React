{"version":3,"sources":["Counter.js","CounterHooks.js","App.js","index.js"],"names":["Counter","props","state","count","initialCount","ThemeContext","Consumer","style","onClick","changeCount","amount","this","setState","prevState","Component","CounterHooks","useState","setCount","useContext","prevCount","React","createContext","App","theme","setTheme","Provider","value","backgroundColor","prevTheme","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAGqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,MAAOF,EAAMG,cAJE,E,qDAQT,IAAD,OACP,OACE,kBAACC,EAAaC,SAAd,MACG,SAAAC,GAAK,OACJ,6BACE,4BAAQA,MAAOA,EAAOC,QAAS,kBAAM,EAAKC,aAAa,KAAvD,KACA,8BAAO,EAAKP,MAAMC,OAClB,4BAAQI,MAAOA,EAAOC,QAAS,kBAAM,EAAKC,YAAY,KAAtD,W,kCAOEC,GAEVC,KAAKC,UAAS,SAAAC,GACZ,MAAO,CAAEV,MAAOU,EAAUV,MAAQO,U,GA1BHI,aCCtB,SAASC,EAAT,GAAyC,IAAjBX,EAAgB,EAAhBA,aAAgB,EAC3BY,mBAASZ,GADkB,mBAC9CD,EAD8C,KACvCc,EADuC,KAE/CV,EAAQW,qBAAWb,GACzB,OACE,6BACE,4BAAQE,MAAOA,EAAOC,QAAS,kBAAMS,GAAS,SAAAE,GAAS,OAAIA,EAAY,OAAvE,KACA,8BAAOhB,GACP,4BAAQI,MAAOA,EAAOC,QAAS,kBAAMS,GAAS,SAAAE,GAAS,OAAIA,EAAY,OAAvE,MCPC,IAAMd,EAAee,IAAMC,gBAkBnBC,MAff,WAAgB,IAAD,EACaN,mBAAS,SADtB,mBACNO,EADM,KACCC,EADD,KAEb,OACE,kBAACnB,EAAaoB,SAAd,CAAuBC,MAAO,CAAEC,gBAAiBJ,IAAjD,UAEE,kBAAC,EAAD,CAASnB,aAAc,IAFzB,gBAIE,kBAACW,EAAD,CAAcX,aAAc,IAC5B,4BAAQI,QAAS,kBAAMgB,GAAS,SAAAI,GAC9B,MAAqB,QAAdA,EAAsB,OAAS,WADxC,kBCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.08d2cb00.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { ThemeContext } from './App';\r\n\r\nexport default class Counter extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      count: props.initialCount\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <ThemeContext.Consumer>\r\n        {style => (\r\n          <div>\r\n            <button style={style} onClick={() => this.changeCount(-1)}>-</button>\r\n            <span>{this.state.count}</span>\r\n            <button style={style} onClick={() => this.changeCount(1)}>+</button>\r\n          </div>\r\n        )}\r\n      </ThemeContext.Consumer >\r\n    );\r\n  }\r\n\r\n  changeCount(amount) {\r\n    //if you need the previous state to set the new state, use this -function- version\r\n    this.setState(prevState => {\r\n      return { count: prevState.count + amount }\r\n    });\r\n\r\n    //if you don't need to use the previous state to set the new state, e.g. here, if you use count: 0, then use this -normal- version\r\n    // this.setState({ count: this.state.count + amount });\r\n  }\r\n}","import React, { useState, useContext } from 'react';\r\nimport { ThemeContext } from './App';\r\n\r\n//because we have simple props, it is easier to read if we skip 'props' and use object deconstruction, by calling {initialCount}\r\nexport default function CounterHooks({ initialCount }) {\r\n  const [count, setCount] = useState(initialCount);\r\n  const style = useContext(ThemeContext);\r\n  return (\r\n    <div>\r\n      <button style={style} onClick={() => setCount(prevCount => prevCount - 1)}>-</button>\r\n      <span>{count}</span>\r\n      <button style={style} onClick={() => setCount(prevCount => prevCount + 1)}>+</button>\r\n    </div>\r\n  );\r\n}\r\n// export default function CounterHooks({ initialCount }) {\r\n//   const [state, setState] = useState({ count: initialCount });\r\n//   return (\r\n//     <div>\r\n//       <button onClick={() => setState(prevState => { return { count: prevState.count - 1}})}>-</button>\r\n//       <span>{state.count}</span>\r\n//       <button onClick={() => setState(prevState => { return { count: prevState.count + 1}})}>+</button>\r\n//     </div>\r\n//   );\r\n// }","import React, { useState } from 'react';\nimport Counter from './Counter';\nimport CounterHooks from './CounterHooks';\n\nexport const ThemeContext = React.createContext();\n\n\nfunction App() {\n  const [theme, setTheme] = useState('green');\n  return (\n    <ThemeContext.Provider value={{ backgroundColor: theme }}>\n      Counter\n      <Counter initialCount={0} />\n      Counter Hooks\n      <CounterHooks initialCount={0} />\n      <button onClick={() => setTheme(prevTheme => {\n        return prevTheme === 'red' ? 'blue' : 'red'\n      })}>Toggle Theme</button>\n    </ThemeContext.Provider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}